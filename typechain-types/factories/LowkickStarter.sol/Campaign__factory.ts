/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Campaign,
  CampaignInterface,
} from "../../LowkickStarter.sol/Campaign";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endsAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_goal",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_organizer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pledger",
        type: "address",
      },
    ],
    name: "Pledged",
    type: "event",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endsAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fullRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "goal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "organizer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pledge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "pledged",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "refundPledge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161060d38038061060d83398101604081905261002f9161006c565b600093909355600191909155600480546001600160a01b039092166001600160a01b031992831617905560058054909116331790556003556100b8565b6000806000806080858703121561008257600080fd5b84516020860151604087015191955093506001600160a01b03811681146100a857600080fd5b6060959095015193969295505050565b610546806100c76000396000f3fe6080604052600436106100965760003560e01c80636120326511610069578063ae2c46581161004e578063ae2c465814610160578063aeafca2e14610180578063af640d0f1461019657600080fd5b8063612032651461010657806388ffe8671461015857600080fd5b80630a09284a1461009b5780632ffe1429146100c457806340193883146100db5780634e71d92d146100f1575b600080fd5b3480156100a757600080fd5b506100b160005481565b6040519081526020015b60405180910390f35b3480156100d057600080fd5b506100d96101ac565b005b3480156100e757600080fd5b506100b160015481565b3480156100fd57600080fd5b506100d961020f565b34801561011257600080fd5b506004546101339073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100bb565b6100d9610392565b34801561016c57600080fd5b506100d961017b36600461049c565b610423565b34801561018c57600080fd5b506100b160025481565b3480156101a257600080fd5b506100b160035481565b60005442116101ba57600080fd5b600154600254106101ca57600080fd5b33600081815260066020526040808220805490839055905190929183156108fc02918491818181858888f1935050505015801561020b573d6000803e3d6000fd5b5050565b600054421161021d57600080fd5b60045473ffffffffffffffffffffffffffffffffffffffff16331461024157600080fd5b600154600254101561025257600080fd5b60055474010000000000000000000000000000000000000000900460ff161561027a57600080fd5b600580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000017905560045460025460405173ffffffffffffffffffffffffffffffffffffffff9092169181156108fc0291906000818181858888f19350505050158015610302573d6000803e3d6000fd5b506005546003546040517f263e0dfd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163263e0dfd9161035e9160040190815260200190565b600060405180830381600087803b15801561037857600080fd5b505af115801561038c573d6000803e3d6000fd5b50505050565b6000544211156103a157600080fd5b600034116103ae57600080fd5b34600260008282546103c091906104e4565b909155505033600090815260066020526040812080543492906103e49084906104e4565b9091555050604080513481523360208201527f8d6ee36029e7d319f08944d549c7b4918800041d9893b2b88874844ba50a3540910160405180910390a1565b60005442111561043257600080fd5b33600090815260066020526040812080548392906104519084906104fd565b92505081905550806002600082825461046a91906104fd565b9091555050604051339082156108fc029083906000818181858888f1935050505015801561020b573d6000803e3d6000fd5b6000602082840312156104ae57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156104f7576104f76104b5565b92915050565b818103818111156104f7576104f76104b556fea2646970667358221220719f71cb39403936c6187212b9e5234ee3f8fcb0a7625acf77a88a99e02ba70d64736f6c63430008120033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _endsAt: PromiseOrValue<BigNumberish>,
    _goal: PromiseOrValue<BigNumberish>,
    _organizer: PromiseOrValue<string>,
    _id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Campaign> {
    return super.deploy(
      _endsAt,
      _goal,
      _organizer,
      _id,
      overrides || {}
    ) as Promise<Campaign>;
  }
  override getDeployTransaction(
    _endsAt: PromiseOrValue<BigNumberish>,
    _goal: PromiseOrValue<BigNumberish>,
    _organizer: PromiseOrValue<string>,
    _id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _endsAt,
      _goal,
      _organizer,
      _id,
      overrides || {}
    );
  }
  override attach(address: string): Campaign {
    return super.attach(address) as Campaign;
  }
  override connect(signer: Signer): Campaign__factory {
    return super.connect(signer) as Campaign__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new utils.Interface(_abi) as CampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Campaign {
    return new Contract(address, _abi, signerOrProvider) as Campaign;
  }
}
